-- Load the Visual UI Library
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/VisualRoblox/Roblox/main/UI-Libraries/Visual%20UI%20Library/Source.lua'))()

-- Create the main window
local Window = Library:CreateWindow('ESP Hub', 'Game Name', 'ESP Settings', 'rbxassetid://10618928818', false, 'VisualUIConfigs', 'Default')

-- Create a tab for ESP settings
local Tab = Window:CreateTab('ESP Settings', true, 'rbxassetid://3926305904', Vector2.new(484, 44), Vector2.new(36, 36))

-- Create a section for ESP options
local Section = Tab:CreateSection('ESP Options')

-- Create a toggle for enabling/disabling ESP
local EnableESPToggle = Section:CreateToggle('Enable ESP', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    -- Enable or disable ESP based on the toggle state
    if Value then
        print("ESP Enabled")
        -- Here, you would enable your ESP drawing functions
    else
        print("ESP Disabled")
        -- Here, you would disable your ESP drawing functions
    end
end)

-- Create a checkbox for enabling/disabling tracers
local TracersToggle = Section:CreateToggle('Enable Tracers', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if EnableESPToggle.Value then  -- Only allow enabling tracers if ESP is enabled
        if Value then
            print("Tracers Enabled")
            -- Here, you would enable tracers functionality
        else
            print("Tracers Disabled")
            -- Here, you would disable tracers functionality
        end
    else
        TracersToggle:SetValue(false)  -- Reset to false if ESP is not enabled
        print("Enable ESP first to use tracers.")
    end
end)

-- Create a checkbox for enabling/disabling chams
local ChamsToggle = Section:CreateToggle('Enable Chams', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if EnableESPToggle.Value then  -- Only allow enabling chams if ESP is enabled
        if Value then
            print("Chams Enabled")
            -- Here, you would enable chams functionality
        else
            print("Chams Disabled")
            -- Here, you would disable chams functionality
        end
    else
        ChamsToggle:SetValue(false)  -- Reset to false if ESP is not enabled
        print("Enable ESP first to use chams.")
    end
end)

-- Create a checkbox for enabling/disabling bone/skeleton ESP
local SkeletonToggle = Section:CreateToggle('Enable Skeleton ESP', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if EnableESPToggle.Value then  -- Only allow enabling skeleton ESP if ESP is enabled
        if Value then
            print("Skeleton ESP Enabled")
            -- Here, you would enable skeleton ESP functionality
        else
            print("Skeleton ESP Disabled")
            -- Here, you would disable skeleton ESP functionality
        end
    else
        SkeletonToggle:SetValue(false)  -- Reset to false if ESP is not enabled
        print("Enable ESP first to use skeleton ESP.")
    end
end)

-- Create a button to refresh the ESP settings
local RefreshButton = Section:CreateButton('Refresh ESP', function()
    print("Refreshing ESP settings...")
    -- Here, you would update the ESP drawing functions and refresh all settings.
    -- Make sure to apply the latest settings based on the toggles' states.
end)

-- Example of how you might change settings dynamically
local Colorpicker = Section:CreateColorpicker('ESP Color', Color3.fromRGB(255, 0, 0), 0.25, function(Value)
    print("ESP Color changed to: ", Value)
    -- Here, you would update the ESP color with the chosen value
end)

-- Save the configuration
Library:SaveConfig('ESPConfig')

-- Set up a notification when settings are saved
Library:CreateNotification('ESP Settings', 'Your ESP settings have been saved.', 5)
