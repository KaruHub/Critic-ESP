local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()

-- Create UI Window
local Window = OrionLib:MakeWindow({Name = "Universal ESP", HidePremium = false, SaveConfig = true, ConfigFolder = "ESPConfig"})

-- Create ESP Tab
local EspTab = Window:MakeTab({
    Name = "ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create ESP Section
local EspSection = EspTab:AddSection({
    Name = "ESP Settings"
})

-- Table to store ESP objects
local EspEnabled = false
local TracersEnabled = false
local ChamsEnabled = false
local SkeletonEnabled = false
local EspObjects = {}
local Tracers = {}

-- Function to create ESP and tracers
local function CreateESP(player)
    if player == game.Players.LocalPlayer then return end -- Don't ESP yourself

    local character = player.Character
    if not character then return end

    -- Create ESP Box (Highlight)
    local highlight = Instance.new("Highlight")
    highlight.Parent = character
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.FillTransparency = 0.5
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.OutlineTransparency = 0

    EspObjects[player] = highlight

    -- Create Tracer (Line)
    local tracer = Drawing.new("Line")
    tracer.Color = Color3.fromRGB(255, 0, 0)
    tracer.Thickness = 2
    tracer.Transparency = 1
    tracer.Visible = false

    Tracers[player] = tracer

    -- Create Chams (Visible through walls)
    if ChamsEnabled then
        local cham = Instance.new("MeshPart")
        cham.Size = Vector3.new(2, 5, 2)
        cham.Position = character.HumanoidRootPart.Position
        cham.Material = Enum.Material.Neon
        cham.Color = Color3.fromRGB(255, 0, 0)
        cham.Parent = character
    end

    -- Create Bone/Skeleton ESP (if enabled)
    if SkeletonEnabled then
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("MeshPart") or part:IsA("Part") then
                local boneESP = Instance.new("BillboardGui")
                boneESP.Adornee = part
                boneESP.Size = UDim2.new(0, 10, 0, 10)
                boneESP.StudsOffset = Vector3.new(0, 2, 0)

                local textLabel = Instance.new("TextLabel")
                textLabel.Text = part.Name
                textLabel.TextSize = 14
                textLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
                textLabel.Size = UDim2.new(0, 10, 0, 10)
                textLabel.BackgroundTransparency = 1
                textLabel.Parent = boneESP

                boneESP.Parent = part
            end
        end
    end
end

-- Function to remove ESP and tracers
local function RemoveESP(player)
    if EspObjects[player] then
        EspObjects[player]:Destroy()
        EspObjects[player] = nil
    end
    if Tracers[player] then
        Tracers[player]:Remove()
        Tracers[player] = nil
    end
end

-- Function to update tracers (now shows tracers for all players even off-screen)
game:GetService("RunService").RenderStepped:Connect(function()
    if not TracersEnabled then return end
    for player, tracer in pairs(Tracers) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local screenPosition, onScreen = game.Workspace.CurrentCamera:WorldToViewportPoint(rootPart.Position)

            -- Update tracer position even if not on-screen
            tracer.From = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y) -- Bottom center of screen
            tracer.To = Vector2.new(screenPosition.X, screenPosition.Y) -- Player position
            tracer.Visible = true
        else
            tracer.Visible = false
        end
    end
end)

-- Function to toggle ESP
local function ToggleESP(state)
    EspEnabled = state
    if EspEnabled then
        -- Add ESP to all players
        for _, player in pairs(game.Players:GetPlayers()) do
            CreateESP(player)
        end
    else
        -- Remove ESP from all players
        for _, player in pairs(game.Players:GetPlayers()) do
            RemoveESP(player)
        end
    end
end

-- Function to toggle tracers
local function ToggleTracers(state)
    TracersEnabled = state
    for _, tracer in pairs(Tracers) do
        tracer.Visible = state
    end
end

-- Function to toggle chams
local function ToggleChams(state)
    ChamsEnabled = state
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character then
            -- Remove old cham and create a new one
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("MeshPart") then
                    part:Destroy() -- Remove previous cham
                end
            end
            if ChamsEnabled then
                CreateESP(player) -- Recreate chams if enabled
            end
        end
    end
end

-- Function to toggle Skeleton ESP
local function ToggleSkeleton(state)
    SkeletonEnabled = state
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character then
            -- Recreate skeleton ESP if enabled
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("MeshPart") or part:IsA("Part") then
                    local existingESP = part:FindFirstChildOfClass("BillboardGui")
                    if existingESP then
                        existingESP:Destroy() -- Remove previous skeleton ESP
                    end
                    if SkeletonEnabled then
                        -- Create new skeleton ESP
                        local boneESP = Instance.new("BillboardGui")
                        boneESP.Adornee = part
                        boneESP.Size = UDim2.new(0, 10, 0, 10)
                        boneESP.StudsOffset = Vector3.new(0, 2, 0)

                        local textLabel = Instance.new("TextLabel")
                        textLabel.Text = part.Name
                        textLabel.TextSize = 14
                        textLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
                        textLabel.Size = UDim2.new(0, 10, 0, 10)
                        textLabel.BackgroundTransparency = 1
                        textLabel.Parent = boneESP

                        boneESP.Parent = part
                    end
                end
            end
        end
    end
end

-- Enable ESP Checkbox
EspTab:AddToggle({
    Name = "Enable ESP",
    Default = false,
    Callback = function(Value)
        ToggleESP(Value)
    end    
})

-- Tracer Toggle
EspTab:AddToggle({
    Name = "Enable Tracers",
    Default = false,
    Callback = function(Value)
        if EspEnabled then
            ToggleTracers(Value)
        end
    end    
})

-- Chams Toggle
EspTab:AddToggle({
    Name = "Enable Chams",
    Default = false,
    Callback = function(Value)
        if EspEnabled then
            ToggleChams(Value)
        end
    end    
})

-- Skeleton ESP Toggle
EspTab:AddToggle({
    Name = "Enable Skeleton ESP",
    Default = false,
    Callback = function(Value)
        if EspEnabled then
            ToggleSkeleton(Value)
        end
    end    
})

-- ESP Color Picker
EspTab:AddColorpicker({
    Name = "ESP Color",
    Default = Color3.fromRGB(255, 0, 0),
    Callback = function(Value)
        for _, esp in pairs(EspObjects) do
            esp.FillColor = Value
        end
        for _, tracer in pairs(Tracers) do
            tracer.Color = Value
        end
    end
})

-- ESP Transparency Slider
EspTab:AddSlider({
    Name = "ESP Transparency",
    Min = 0,
    Max = 1,
    Default = 0.5,
    Increment = 0.1,
    Callback = function(Value)
        for _, esp in pairs(EspObjects) do
            esp.FillTransparency = Value
        end
    end    
})

-- ESP Outline Toggle
EspTab:AddToggle({
    Name = "Enable Outline",
    Default = true,
    Callback = function(Value)
        for _, esp in pairs(EspObjects) do
            esp.OutlineTransparency = Value and 0 or 1
        end
    end    
})

-- Auto Update ESP for New Players
game.Players.PlayerAdded:Connect(function(player)
    if EspEnabled then
        player.CharacterAdded:Connect(function()
            task.wait(1) -- Give time for character to load
            CreateESP(player)
        end)
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    RemoveESP(player)
end)

-- Regularly refresh ESPs every 3 seconds
while true do
    if EspEnabled then
        -- Ensure all players are added to ESP
        for _, player in pairs(game.Players:GetPlayers()) do
            if not EspObjects[player] then
                CreateESP(player)
            end
        end
    end
    task.wait(3) -- Refresh every 3 seconds
end

OrionLib:Init()
